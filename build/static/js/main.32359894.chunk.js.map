{"version":3,"sources":["App.js","reportWebVitals.js","controllers/parse_and_search.js","routes/symbol_lookup.jsx","controllers/quote_machine.js","routes/quote.jsx","index.js"],"names":["App","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ParseAndSearch","readRemoteFile","usePapaParse","useState","data","setData","finalCompany","setFinalCompany","newAnswer","setNewAnswer","errorMessage","setErrorMessage","url","useEffect","header","complete","results","console","log","length","id","onSubmit","event","preventDefault","userCompany","FormData","currentTarget","get","tempAnswer","filter","company","Name","toLowerCase","includes","err","type","name","placeholder","map","answer","index","className","SymbolLookup","QuoteLookup","mySymbol","setMySymbol","outputSymbol","setOutputSymbol","outputLastClose","setOutputLastClose","outputLastCloseDate","setOutputLastCloseDate","newSymbol","options","method","params","function","symbol","output_size","datatype","axios","request","response","newObject","stockSymbol","dateArray","Object","entries","forEach","date","push","catch","error","toUpperCase","Quote","ReactDOM","createRoot","document","getElementById","render","path","element"],"mappings":"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","file":"static/js/main.32359894.chunk.js","sourcesContent":["import { Outlet, Link } from 'react-router-dom'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <section><h1>Stock Quote</h1></section>\r\n      <nav>\r\n          <Link to=\"/symbol_lookup\">Symbol Lookup</Link> | {\" \"}\r\n          <Link to=\"/quote\">Quote</Link>\r\n      </nav>\r\n      <Outlet />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, {\r\n  useEffect,\r\n  useState\r\n} from 'react';\r\nimport { usePapaParse } from 'react-papaparse';\r\n\r\nexport function ParseAndSearch() {\r\n  const { readRemoteFile } = usePapaParse();\r\n  let [data, setData] = useState([]);\r\n  const [finalCompany, setFinalCompany] = useState('');\r\n  const [newAnswer, setNewAnswer] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const url = 'nasdaq_screener_1661027821778_082022.csv';\r\n\r\n  useEffect(() => {\r\n    readRemoteFile(url, {\r\n      header: true,\r\n      complete: (results) => {\r\n        console.log('---------------');\r\n        console.log('Results:', results);\r\n        console.log('---------------');\r\n        setData(results.data);\r\n      }\r\n    });\r\n  }, [url, readRemoteFile]);\r\n\r\n  console.log('Complete', data.length, 'records');\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    const formData = new FormData(event.currentTarget);\r\n    let userCompany = formData.get('companyname');\r\n    setFinalCompany(userCompany);\r\n    try {\r\n      let tempAnswer = [];\r\n      tempAnswer = data.filter(company => {\r\n        if (!company.Name) return false;\r\n        if (company.Name.toLowerCase().includes(userCompany.toLowerCase())) return true;\r\n        return false;\r\n      });\r\n\r\n      if (!tempAnswer.length) {\r\n        setNewAnswer([]);\r\n        setErrorMessage('No such company found!');\r\n      } else {\r\n        setNewAnswer(tempAnswer);\r\n        setErrorMessage('');\r\n      }\r\n\r\n    } catch (err) {\r\n      setNewAnswer([]);\r\n      setErrorMessage('No such company found!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Symbol Lookup</h2>\r\n        <h3>Don't Know the Stock Symbol?  Input Stock Company Name Here</h3>\r\n        <form id='symbol-lookup' onSubmit={handleSubmit}>\r\n          <input id='companyname' type=\"text\" name='companyname' placeholder='Company Name' />\r\n          <button type='submit'>Submit</button>\r\n          <h4>Currently has the NASDAQ 8,308 companies and tickers as of 08/20/22</h4>\r\n          <h4>US Companies (and ADRs) Only</h4>\r\n        </form>\r\n      </section>\r\n      <section>\r\n        <h3 id='lookup-output'>\r\n          <em>Your Input:</em> {finalCompany}<br />\r\n          <em>Results:</em><br />\r\n          *******************************<br />\r\n          {newAnswer.map((answer, index) => {\r\n            return <div key={index}>\r\n              *******************************<br />\r\n              Company Name: {answer.Name}<br />\r\n              Company Symbol: {answer['Symbol']}<br />\r\n              </div>\r\n          })}\r\n\r\n          <span className='output-styling'>{errorMessage}</span>\r\n        </h3>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n","import {\r\n  Outlet\r\n} from 'react-router-dom'\r\nimport { ParseAndSearch } from '../controllers/parse_and_search'\r\n\r\nfunction SymbolLookup() {\r\n  return (\r\n    <div>\r\n      <ParseAndSearch />\r\n      <Outlet />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SymbolLookup\r\n","import React, {\r\n  useState\r\n} from 'react';\r\n// import request from 'request';\r\nimport axios from 'axios';\r\n\r\n// below somewhat copied from: https://www.alphavantage.co/documentation/ and\r\n// https://rapidapi.com/alphavantage/api/alpha-vantage\r\n// 5 API requests a minute and 500 requests a day\r\n\r\nexport function QuoteLookup() {\r\n  const [mySymbol, setMySymbol] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [outputSymbol, setOutputSymbol] = useState('');\r\n  const [outputLastClose, setOutputLastClose] = useState('');\r\n  const [outputLastCloseDate, setOutputLastCloseDate] = useState('');\r\n  // const [output, setOutput] = useState({});\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const formData = new FormData(event.currentTarget);\r\n    let newSymbol = formData.get('stocksymbol');\r\n    setMySymbol(newSymbol);\r\n\r\n    const options = {\r\n      method: 'GET',\r\n      url: '/quote',\r\n      params: {\r\n        function: 'TIME_SERIES_DAILY',\r\n        symbol: newSymbol,\r\n        output_size: 'compact',\r\n        datatype: 'json',\r\n      }\r\n    };\r\n\r\n    axios.request(options).then((response) => {\r\n      console.log(response.data);\r\n      console.log(typeof(response.data));\r\n\r\n      let newObject = response.data;\r\n\r\n      let stockSymbol = newObject['Meta Data']['2. Symbol'];\r\n      setOutputSymbol(stockSymbol);\r\n\r\n      let dateArray = [];\r\n      Object.entries(newObject['Time Series (Daily)']).forEach(function (date) {\r\n        dateArray.push(date);\r\n      });\r\n      console.log(dateArray); // all close dates as objects with nested values\r\n      console.log(dateArray[0][0]); // first close date\r\n      console.log(dateArray[0][1]); // nested values of first close date\r\n      console.log(dateArray[0][1]['4. close']); // first close value\r\n      setOutputLastClose(dateArray[0][1]['4. close']);\r\n      setOutputLastCloseDate(dateArray[0][0]);\r\n      setErrorMessage('');\r\n\r\n    }).catch((error) => {\r\n      console.log(error);\r\n      setOutputSymbol('');\r\n      setOutputLastClose('');\r\n      setOutputLastCloseDate('');\r\n      setErrorMessage('No such symbol found!');\r\n    })\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Stock Quote</h2>\r\n        <h3>From Alpha Vantage</h3>\r\n        <form id='stock-quote' onSubmit={handleSubmit}>\r\n          <input id='stocksymbol' type='text' name='stocksymbol' placeholder='Stock Symbol' />\r\n          <button type='submit'>Submit</button>\r\n        </form>\r\n      </section>\r\n      <section>\r\n        <h3 id='lookup-output'>\r\n          <em>Your Input:</em> {mySymbol}<br />\r\n          <em>Results:</em><br />\r\n          *******************************<br />\r\n          Stock Symbol: {outputSymbol.toUpperCase()} <br />\r\n          Last Close Date: {outputLastCloseDate} <br />\r\n          Last Close: ${outputLastClose} <br />\r\n          {/*\r\n          {newAnswer.map((answer, index) => {\r\n            return <div key={index}>\r\n              *******************************<br />\r\n              Company Name: {answer.Name}<br />\r\n              Company Symbol: {answer['Symbol']}<br />\r\n              </div>\r\n            })}\r\n            */}\r\n            <span className='output-styling'>{errorMessage}</span>\r\n          </h3>\r\n      </section>\r\n  </div>\r\n  )\r\n}\r\n","import {\r\n  Outlet\r\n} from 'react-router-dom';\r\nimport { QuoteLookup } from '../controllers/quote_machine';\r\n\r\nfunction Quote() {\r\n  return (\r\n    <div>\r\n      <QuoteLookup />\r\n      <Outlet />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Quote;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route\r\n} from 'react-router-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport SymbolLookup from './routes/symbol_lookup'\r\nimport Quote from './routes/quote'\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'))\r\nroot.render(\r\n  <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/\" element={<App />}>\r\n          <Route path=\"symbol_lookup\" element={<SymbolLookup />} />\r\n          <Route path=\"quote\" element={<Quote />} />\r\n          <Route index element={\r\n            <main>\r\n              <section>\r\n                <p>Here you can look at stock quotes</p>\r\n              </section>\r\n            </main>\r\n          }\r\n          />\r\n          <Route path=\"*\" element={\r\n            <section>\r\n              <main>\r\n                <p>There's nothing here!</p>\r\n              </main>\r\n            </section>\r\n          }\r\n          />\r\n        </Route>\r\n\r\n      </Routes>\r\n  </BrowserRouter>\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}